<?xml version="1.0" encoding="UTF-8"?>
<coverLetter xmlns="http://ftn.uns.ac.rs/coverLetter"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://ftn.uns.ac.rs/coverLetter file:/C:/Users/Nikola%20Zubic/Desktop/XMLWEB/sciXiv/Backend/src/main/resources/static/xmlSchemas/coverLetter.xsd" submissionDate="2006-05-04" id="id1">
    <publicationTitle>Soft computing</publicationTitle>
    <version>2</version>
    <author>
        <name>Pero Peric</name>
        <educationTitle>MSc</educationTitle>
        <affiliation>FTN</affiliation>
        <city>Novi Sad</city>
        <state>Serbia</state>
        <phoneNumber>524623623463454335</phoneNumber>
        <email>pero@gmail.com</email>
        <signature>ZGVmYXVsdA==</signature>
    </author>
    <targetPublisher>
        <editor>Mihajlo Kusljic</editor>
        <journal>Nature Communications</journal>
    </targetPublisher>
    <content>
        <paragraph>
            <boldText>Main motivation</boldText>
            <emphasizedText>We believe that the problem to progress in OMR for CWMN lies in the complexity involved in
                correctly modeling the composition of musical symbols. Unlike these hand-engineered multi-stage
                approaches, we propose a holistic strategy in which the musical notation is learned as a whole using
                machine learning strategies. However, to reduce the complexity to a feasible level, we do consider
                a first initial stage in which the image is pre-processed to find and separate the different staves of the
                score. Staves are good basic units to work on, analogously to similar text recognition where a single
                line of text is assumed as input unit. Note that this is not a strong assumption as there are successful
                algorithms for isolating staves, as mentioned above.
            </emphasizedText>
            <quote>
                <source>Kobe Bryant</source>
                <quoteContent>At the end of 2003, my game was complete. Shooting, defense, using the dribble, transition, midrange stuff was all there. Then it was about 
                    fine-tuning and trying to improve in each area.
                </quoteContent>
            </quote>
            <list ordered="true">
                <listItem>Primitive CV</listItem>
                <listItem>CV with usage of Deep Learning</listItem>
            </list>
            <boldText>Main content</boldText>
            <emphasizedText>            
                We believe that the problem to progress in OMR for CWMN lies in the complexity involved in
                correctly modeling the composition of musical symbols. Unlike these hand-engineered multi-stage
                approaches, we propose a holistic strategy in which the musical notation is learned as a whole using
                machine learning strategies. However, to reduce the complexity to a feasible level, we do consider
                a first initial stage in which the image is pre-processed to find and separate the different staves of the
                score. Staves are good basic units to work on, analogously to similar text recognition where a single
                line of text is assumed as input unit. Note that this is not a strong assumption as there are successful
                algorithms for isolating staves, as mentioned above.
                Then, the staff can be addressed as a single unit instead of considering it as a sequence of isolated
                elements that have to be detected and recognized independently. This also opens the possibility
                to boost the optical recognition by taking into account the musical context which, in spite of being
                extremely difficult to model entirely, can certainly help in the process. Thus, it seems interesting to
                tackle the OMR task over single staves in an holistic fashion, in which the expected output is directly
                the sequence of musical symbols present in the image.
            </emphasizedText>
            <quote>
                <source>Khalil Gibran</source>
                <quoteContent>Yesterday we obeyed kings and bent our necks before emperors. But today we kneel only to truth, follow only beauty, and obey only love.
                </quoteContent>
            </quote>
            <list ordered="false">
                <listItem>Genetic algorithm</listItem>
                <listItem>Differential evolution</listItem>
            </list>
        </paragraph>
        <paragraph>
            <boldText>Genetic algorithm</boldText>
            <emphasizedText>In a genetic algorithm, a population of candidate solutions (called individuals, creatures, or phenotypes) to an optimization problem is evolved 
                toward better solutions. Each candidate solution has a set of properties (its chromosomes or genotype) which can be mutated and altered; traditionally,
                solutions are represented in binary as strings of 0s and 1s, but other encodings are also possible.[3]
                
                The evolution usually starts from a population of randomly generated individuals, and is an iterative process, with the population in each iteration 
                called a generation. In each generation, the fitness of every individual in the population is evaluated; the fitness is usually the value of the objective
                function in the optimization problem being solved. The more fit individuals are stochastically selected from the current population, and each individual's 
                genome is modified (recombined and possibly randomly mutated) to form a new generation. The new generation of candidate solutions is then used in the next 
                iteration of the algorithm. Commonly, the algorithm terminates when either a maximum number of generations has been produced, or a satisfactory fitness level
                has been reached for the population.
                
            </emphasizedText>

            <list ordered="true">
                <listItem>AND(x,y)</listItem>
                <listItem>OR(x,y)</listItem>
            </list>
            <boldText>Differential evolution</boldText>
            <emphasizedText>In evolutionary computation, differential evolution (DE) is a method that optimizes a problem by iteratively trying to improve a candidate 
                solution with regard to a given measure of quality. Such methods are commonly known as metaheuristics as they make few or no assumptions about the problem 
                being optimized and can search very large spaces of candidate solutions. However, metaheuristics such as DE do not guarantee an optimal solution is ever found.
                
                DE is used for multidimensional real-valued functions but does not use the gradient of the problem being optimized, which means DE does not require the 
                optimization problem to be differentiable, as is required by classic optimization methods such as gradient descent and quasi-newton methods. DE can therefore 
                also be used on optimization problems that are not even continuous, are noisy, change over time, etc.[1]
            </emphasizedText>

        </paragraph>
    </content>
</coverLetter>
